% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_connection.R
\name{store_unifi_api_token}
\alias{store_unifi_api_token}
\title{Save the API token in the \code{.Renviron} file for repeated use}
\usage{
store_unifi_api_token(token, overwrite = FALSE, install = FALSE)
}
\arguments{
\item{token}{The API token retrieved from UNIFI formated in quotes.}

\item{overwrite}{If this is set to TRUE, it will overwrite an existing UNIFI_API_TOKEN that you already have in your \code{.Renviron} file.}

\item{install}{if TRUE, will install the token in your \code{.Renviron} file for use in future sessions.  Defaults to FALSE.}
}
\description{
This function will add the UNIFI API token to your \code{.Renviron} file so it can be called securely without being stored
in your code. After you have installed your key, it can be called any time by typing \code{Sys.getenv("UNIFI_API_TOKEN")} and can be
used in package functions by simply typing UNIFI_API_TOKEN
If you do not have an \code{.Renviron} file, the function will create on for you.
If you already have an \code{.Renviron} file, the function will append the key to your existing file, while making a backup of your
original file for disaster recovery purposes.
Function obtained and adapted from the tidycensus package
}
\examples{

\dontrun{
unifi_api_token("111111abc", install = TRUE)
# First time, reload your environment so you can use the key without restarting R.
readRenviron("~/.Renviron")
# You can check it with:
Sys.getenv("UNIFI_API_TOKEN")
}

\dontrun{
# If you need to overwrite an existing key:
unifi_api_token("111111abc", overwrite = TRUE, install = TRUE)
# First time, relead your environment so you can use the key without restarting R.
readRenviron("~/.Renviron")
# You can check it with:
Sys.getenv("UNIFI_API_TOKEN")
}
}
